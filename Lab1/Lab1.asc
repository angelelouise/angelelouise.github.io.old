= Lab 1

== Exercício 1

Utilizando o programa teste-make.c como referência, implemente um programa quadrados4.c. 
Este programa deverá desenhar numa janela com fundo branco, de dimensões 256x256 pixels, e quatro quadrados de cores diferentes arranjados na janela.

.Código
//ifdef::basebackend-docbook[[source,c++]]
//ifdef::basebackend-html[[source,cpp]]
-----------------------------------------------------------------
#include <GL/glut.h>
#include <stdlib.h>
#include <stdio.h>

void display(void);
void keyboard(unsigned char key, int x, int y);

/* cores do quadrado */
GLfloat r=1.0, g=0.5, b=0.0;
void init(void);
int main(int argc, char** argv){
  glutInit(&argc, argv);
  glutInitDisplayMode (GLUT_SINGLE | GLUT_RGB);
  glutInitWindowSize (256, 256); 
  glutInitWindowPosition (100, 100); 
  glutCreateWindow (argv[0]);
  init();
  // inicia um temporizador. após 33ms ativa a funcao timer
  //glutTimerFunc(33, timer, 1);
  glShadeModel (GL_FLAT);
  glutDisplayFunc(display);
  glutMainLoop();
  return 0;
}
void init(){
	  glClearColor(1.0, 1.0, 1.0, 1.0);
	  glOrtho (0, 256, 0, 256, -1 ,1);
}


void display(void){
  int i;
  //figura 0
  glClear(GL_COLOR_BUFFER_BIT);
  glColor3f (r, g, b);
  glBegin(GL_POLYGON);
  glVertex2i(30,113); glVertex2i(113,113);
  glVertex2i(113,30); glVertex2i(30,30); 
  glEnd();
  //figura 1
  glColor3f (0, 0, 1);
  glBegin(GL_POLYGON);
  glVertex2i(143,113); glVertex2i(226,113);
  glVertex2i(226,30); glVertex2i(143,30); 
  glEnd();
  //figura 2
  glColor3f (1.0, 0, 1.0);
  glBegin(GL_POLYGON);
  glVertex2i(30,226);  glVertex2i(113,226);
  glVertex2i(113,143); glVertex2i(30,143);
  glEnd();
  //figura 3
  glColor3f (1.0, 1.0, 0.0);
  glBegin(GL_POLYGON);
  glVertex2i(143,226); glVertex2i(226,226);
  glVertex2i(226,143); glVertex2i(143,143);
  glEnd();
	
  glutSwapBuffers();
  glFlush();
  }

-------------
.Resultados
image::quadrados4.png[]
